/*
Feladat: Írjon egy programot, amely 2 db felhasználói függvényt használ. Az egyik az int beker(int be_tb[], int *min, int
*max), amely 10 db előjeles egész számot kér be úgy, hogy azokat egy tömbbe tárolja le.A tömb hosszát szimbolikus
állandóval állítsa be. A tárolás csak akkor jöjjön létre, ha az alábbi feltételek teljesülnek. A tömb 0. indexén csak a nulla
érték, a páratlan indexein csak páratlan értékek és a páros indexein csak páros számok szerepelhetnek! Ha az adott érték
nem teljesíti a rá vonatkozó feltételt, akkor új számot kell bekérni. Bekérési információk és hibaüzenetek kiírása nem kell!
A feltételek teljesülése esetén a beker függvény határozza meg és tárolja el a legkisebb páratlan, illetve a legnagyobb
páros számokat. Ezen értékek a függvény 2. és 3. paraméterei, amíg az 1. paraméter a tároló tömb. A függvény
visszatérési értéke a 10 db szám összege legyen. A másik függvény a void kiir(int szum, int min, int max), pedig írja ki a
beker függvény visszatérési értékét illetve a 2. és 3. paraméterek értékeit a példában látott szövegezéssel.
*/

#include <iostream>
#define N 10

using namespace std;

int beker(int be_tb[], int* min, int* max) {
	int aktNum;
	int sum = 0;
	bool ok = false;

	int i = 0;
	while (i < 10)
	{
		ok = false;

		if (i == 0) {
			do
			{
				cin >> aktNum;
				if (aktNum == 0) {
					be_tb[i] = aktNum;

					ok = true;
				}
			} while (ok == false);
		}

		else if (i % 2 != 0) {
			do
			{
				cin >> aktNum;
				if (aktNum % 2 != 0) {
					be_tb[i] = aktNum;
					sum += aktNum;
					if (aktNum < *min)
						*min = aktNum;
					ok = true;
				}
			} while (ok == false);
		}

		else if (i % 2 == 0) {
			do
			{
				cin >> aktNum;
				if (aktNum % 2 == 0) {
					be_tb[i] = aktNum;
					sum += aktNum;
					if (aktNum > *max)
						*max = aktNum;
					ok = true;
				}
			} while (ok == false);
		}

		i++;

	}

	return sum;

}

void kiir(int sum, int min, int max) {
	cout << "Az osszeg: " << sum << endl;
	cout << "Minimum: " << min << endl;
	cout << "Maximum: " << max << endl;
}

int main()
{

	int array[N];
	int minimum = INT_MAX;
	int maximum = INT_MIN;

	int sum = beker(array, &minimum, &maximum);
	kiir(sum, minimum, maximum);

	return 0;
}
